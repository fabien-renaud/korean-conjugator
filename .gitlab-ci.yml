stages:
  - build
  - test
  - push

image: docker:latest

services:
  - docker:dind

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  stage: build
  script:
    # Docker caching: pull latest image to reuse commons layers
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID-test --target test .
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID-release --target release .
    - docker push $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID-test
    - docker push $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID-release

test:
  stage: test
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID-test
    - docker run --rm $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID-test

push:
  stage: push
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID-release
    - docker tag $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID-release $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - master